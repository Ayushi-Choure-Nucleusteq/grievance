package com.grievance.payloads;

import javax.persistence.Column;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import com.grievance.entity.MemberRole;

/**
 * MemberDto Data Transfer Object Class.
 * 
 * Used to encapsulate member data for transfer between system layers.
 */
public class MemberDto {

  /**
   * Unique identifier for the member.
   */
  private Integer memberId;

  /**
   * Name of the member.
   */
  @NotEmpty(message = "name null")
  private String name;

  private Boolean isLoggedIn=false;

/**
   * Email address of the member.
   * Expected to be in a valid email format.
   */
  @Email
  @Pattern(regexp = "^[a-z]+@nucleusteq.com$", message = "email not valid")
  @Column(unique = true)
//  @UniqueElements
  private String email;

  /**
   * Password for the member.
   * Expected to have a minimum length of 8 characters.
   */
  @NotEmpty(message = "pass null")
  private String password;

  /**
   * Role or category associated with the member.
   */
//  @NotEmpty(message = "role null")
  private MemberRole role;

  /**
   * Department with which the member is associated.
   */
//   @NotEmpty(message = "department cannot be null")
  private DepartmentDto department;


@Override
public String toString() {
	return "MemberDto [memberId=" + memberId + ", name=" + name + ", email=" + email + ", password=" + password
			+ ", role=" + role + ", department=" + department + "]";
}

/**
   * Default constructor.
   */
  public MemberDto() {}

  /**
   * Parameterized constructor.
   *
   * @param memberId Member ID
   * @param name Name
   * @param email Email
   * @param password Password
   * @param role Role
   */




  public Integer getMemberId() {
    return memberId;
  }



public MemberDto(Integer memberId, @NotEmpty(message = "name null") String name,
		@Email @Pattern(regexp = "^[a-z]+@nucleusteq.com$", message = "email not valid") String email,
		@NotEmpty(message = "pass null") String password, MemberRole role,
		DepartmentDto department) {
	super();
	this.memberId = memberId;
	this.name = name;
	this.email = email;
	this.password = password;
	this.role = role;
	this.department = department;
}

public void setMemberId(Integer memberId) {
    this.memberId = memberId;
  }

  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public MemberRole getRole() {
      return role;
  }

  public void setRole(final MemberRole role) {
       this.role=role;
  }

public DepartmentDto getDepartment() {
	return department;
}

public void setDepartment(DepartmentDto department) {
	this.department = department;
}

public Boolean getIsLoggedIn() {
	return isLoggedIn;
}

public void setIsLoggedIn(Boolean isLoggedIn) {
	this.isLoggedIn = isLoggedIn;
}

}
